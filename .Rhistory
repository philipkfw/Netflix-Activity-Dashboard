#   Genre <- try(justwatch_page %>% html_nodes(".detail-infos__value span") %>% html_text(), silent = TRUE)
#   Runtime <- try(justwatch_page %>% html_nodes(".detail-infos:nth-child(4) .detail-infos__value") %>% html_text(), silent = TRUE)
#
#   i_df <- try(data.frame(Title, Genre, Runtime, stringsAsFactors = FALSE) %>%
#     mutate(Genre = str_replace_all(Genre, ",","")) %>%
#     mutate(Genre = str_trim(Genre, side = c("both"))) %>%
#     filter(Genre != "") %>%
#     distinct(), silent = TRUE)
#
#   if (!exists("justwatch_df")){
#     justwatch_df <- i_df
#   } else {
#     justwatch_df <- rbind(justwatch_df, i_df)
#   }
#   rm(i_df)
#   rm(justwatch_page)
# }
#
# Genres_vector <- as.vector(c("History", "Documentary", "Music & Musical", "Sport", "Horror",
#                            "Reality TV", "Crime", "Myster & Thriller", "Fantasy", "Comedy",
#                            "Western", "Animation", "Action & Adventure", "Science-Friction", "Romance", "Drama"))
#
# justwatch_manipulated_df <- justwatch_df %>%
#   filter(!str_detect(Title,"Error")) %>%
#   filter(Genre %in% Genres_vector) %>%
#   group_by(Title, Runtime) %>%
#   summarise(Genre = paste0(Genre, collapse = ", ")) %>%
#   ungroup() %>%
#   mutate(Title = str_trim(Title, side = c("both"))) %>%
#   mutate(Manipulated_Title = str_to_lower(Title)) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, " ","-")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "!", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "’", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "'", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "&", "and")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "‘", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, ",", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "ū", "u")) %>%
#   select(-Title)
# Export justwatch_manipulated_df to csv file
# write_csv(justwatch_manipulated_df, "output/justwatch_manipulated_df.csv")
justwatch_manipulated_df <- read_csv("output/justwatch_manipulated_df.csv")
# left join justwatch_manipulated_df (web scraped) to personal activity data
df <- manipulated_csv %>% left_join(justwatch_manipulated_df, by = c("Manipulated_Title" = "Manipulated_Title"))
# remove any rows w/ NA values
na.omit(df)
# Separate runtime into 2 separate columns
manipulated_df <- df %>%
mutate(Year = year(Date)) %>%
mutate(MonthStartDate = as.Date(as.yearmon(Date, format = "%b%Y"), frac = 0)) %>%
relocate(Year, .after = Date) %>%
relocate(MonthStartDate, .after = Year) %>%
separate(Runtime, into=c("Hour", "Minute"), sep = " ") %>%
relocate(Genre, .before = Hour) %>%
mutate(Minute = case_when(is.na(Minute) & str_detect(Hour, "min") ~ Hour, TRUE ~ Minute)) %>%
mutate(Hour = case_when(str_detect(Hour, "min") ~ "0h", TRUE ~ Hour)) %>%
filter(Hour != "TV-MA") %>%
mutate(Hour = as.numeric(str_replace_all(Hour,"h", ""))) %>%
mutate(Minute = as.numeric(str_replace_all(Minute,"min", ""))) %>%
mutate(Total_Minutes = (Hour * 60) + Minute) %>%
mutate(Total_Hours = round(Total_Minutes / 60, 0)) %>%
mutate(Month = month(Date)) %>%
mutate(WeekDay = weekdays(Date)) %>%
mutate(Type = str_to_title(Type))
# remove individual monthly sales dataframes (for cleanliness)
rm(list=ls(pattern=".csv"))
# Color scale for this dashboard
color_scale <- c("#E50914", "#141414")
# color_scale <- c("#FFC1E7", "#7CDAE3")
metis_color <- color_scale[1]
philip_color <- color_scale[2]
genre_split_df <- manipulated_df %>%
separate_rows(Genre, sep = ",") %>%
mutate(Genre = str_trim(Genre, side = "both"))
View(genre_split_df)
ggplot(genre_split_df, aes(area = Genre, fill = Total_Minutes)) +
geom_treemap()
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Genre, fill = Total_Minutes)) +
geom_treemap()
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Genre, fill = Total_Minutes)) +
geom_treemap()
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes)) +
geom_treemap()
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap()
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap()
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", position = "center")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = "red")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = "reds")
?scale_fill_brewer
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = metis_color)
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = "Reds")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = Reds)
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Reds')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Genre, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Genre, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center")
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = as.factor(Total_Minutes), label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = as.factor(Total_Minutes), fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = as.factor(Total_Minutes), fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Genre, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Genre, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = as.factor(Genre))) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
genre_split_df %>%
group_by(Genre) %>%
summarise(Total_Minutes = sum(Total_Minutes)) %>%
ungroup() %>%
ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_brewer(palette = 'Blues')
fig <- plot_ly(
type = "treemap",
labels = genre_split_df$Genre
)
fig
# genre_split_df %>%
#   group_by(Genre) %>%
#   summarise(Total_Minutes = sum(Total_Minutes)) %>%
#   ungroup() %>%
#   ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
#   geom_treemap() +
#   geom_treemap_text(color = "white", place = "center") +
#   scale_fill_brewer(palette = 'Blues')
fig <- plot_ly(
type = "treemap",
labels = genre_split_df$Genre
)
fig
# genre_split_df %>%
#   group_by(Genre) %>%
#   summarise(Total_Minutes = sum(Total_Minutes)) %>%
#   ungroup() %>%
#   ggplot(aes(area = Total_Minutes, fill = Total_Minutes, label = Genre)) +
#   geom_treemap() +
#   geom_treemap_text(color = "white", place = "center") +
#   scale_fill_brewer(palette = 'Blues')
fig <- plot_ly(
type = "treemap",
labels = c(genre_split_df$Genre)
)
fig
# working directory
library(rstudioapi)
if(rstudioapi::isAvailable()){
path <- rstudioapi::getActiveDocumentContext()$path
Encoding(path) <- "UTF-8"
setwd(dirname(path))
}
# import packages
library(tidyverse)
library(gridExtra) # to plot multiple ggplot objects
library(scales)
library(lubridate)
library(readxl)
library(readr)
library(zoo)
library(reshape2)
library(kableExtra)
library(flexdashboard)
library(htmlwidgets)
library(DT)
library(shiny)
library(plotly)
library(treemap)
library(highcharter)
library(viridisLite)
library(data.table)
library(rvest)
library(treemapify)
library(bslib)
library(shinyWidgets)
library(highcharter)
# Import personal Netflix viewing data
# personal viewing data - exported directly from Netflix website
# specifies all xlsx files within our input folder
file_names <- list.files(
path = "input",
pattern = "*.csv",
full.names = TRUE)
# for loop to import multiple csv files from input folder directory
for (i in file_names){
df <- read_csv((i))
assign(substr(i, 7, nchar(i)) , df)
rm(df)
}
# bind Metis' watch history & Philip's history into a single dataframe
NetflixViewingHistory_Metis.csv$User <- "Metis"
NetflixViewingHistory_Philip.csv$User <- "Philip"
binded_csv <- rbind(NetflixViewingHistory_Metis.csv, NetflixViewingHistory_Philip.csv)
# Manipulate binded_df
# split title into 2 separate columns
manipulated_csv <- binded_csv %>%
separate(Title, into = c("Title", "Description"), sep = ":") %>%
filter(!is.na(Title)) %>%
mutate(Manipulated_Title = str_to_lower(Title)) %>%
mutate(Manipulated_Title = str_replace_all(Manipulated_Title, " ","-")) %>%
mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "!", "")) %>%
mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "’", "")) %>%
mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "'", "")) %>%
mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "&", "and")) %>%
mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "‘", "")) %>%
mutate(Manipulated_Title = str_replace_all(Manipulated_Title, ",", "")) %>%
mutate(
Type = case_when(
is.na(Description) ~ "movie",
TRUE ~ "tv-show"
)
) %>%
select(-Description) %>%
mutate(web_scrape_URL = paste0("https://justwatch.com/us/",Type,"/",Manipulated_Title))
# Import Netflix data based on webscraped data
watched_movies_shows_vector <- as.vector(unique(manipulated_csv$web_scrape_URL))
# for loop to scrape all the movie data captured from the website;
# URL: https://www.justwatch.com/
# for (i in 1:length(watched_movies_shows_vector)){
#   justwatch_link <- watched_movies_shows_vector[i]
#   justwatch_page <- try(read_html(justwatch_link), silent = TRUE)
#   Title <- try(justwatch_page %>% html_nodes("h1") %>% html_text(), silent = TRUE)
#   Genre <- try(justwatch_page %>% html_nodes(".detail-infos__value span") %>% html_text(), silent = TRUE)
#   Runtime <- try(justwatch_page %>% html_nodes(".detail-infos:nth-child(4) .detail-infos__value") %>% html_text(), silent = TRUE)
#
#   i_df <- try(data.frame(Title, Genre, Runtime, stringsAsFactors = FALSE) %>%
#     mutate(Genre = str_replace_all(Genre, ",","")) %>%
#     mutate(Genre = str_trim(Genre, side = c("both"))) %>%
#     filter(Genre != "") %>%
#     distinct(), silent = TRUE)
#
#   if (!exists("justwatch_df")){
#     justwatch_df <- i_df
#   } else {
#     justwatch_df <- rbind(justwatch_df, i_df)
#   }
#   rm(i_df)
#   rm(justwatch_page)
# }
#
# Genres_vector <- as.vector(c("History", "Documentary", "Music & Musical", "Sport", "Horror",
#                            "Reality TV", "Crime", "Myster & Thriller", "Fantasy", "Comedy",
#                            "Western", "Animation", "Action & Adventure", "Science-Friction", "Romance", "Drama"))
#
# justwatch_manipulated_df <- justwatch_df %>%
#   filter(!str_detect(Title,"Error")) %>%
#   filter(Genre %in% Genres_vector) %>%
#   group_by(Title, Runtime) %>%
#   summarise(Genre = paste0(Genre, collapse = ", ")) %>%
#   ungroup() %>%
#   mutate(Title = str_trim(Title, side = c("both"))) %>%
#   mutate(Manipulated_Title = str_to_lower(Title)) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, " ","-")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "!", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "’", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "'", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "&", "and")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "‘", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, ",", "")) %>%
#   mutate(Manipulated_Title = str_replace_all(Manipulated_Title, "ū", "u")) %>%
#   select(-Title)
# Export justwatch_manipulated_df to csv file
# write_csv(justwatch_manipulated_df, "output/justwatch_manipulated_df.csv")
justwatch_manipulated_df <- read_csv("output/justwatch_manipulated_df.csv")
# left join justwatch_manipulated_df (web scraped) to personal activity data
df <- manipulated_csv %>% left_join(justwatch_manipulated_df, by = c("Manipulated_Title" = "Manipulated_Title"))
# remove any rows w/ NA values
na.omit(df)
# Separate runtime into 2 separate columns
manipulated_df <- df %>%
mutate(Year = year(Date)) %>%
mutate(MonthStartDate = as.Date(as.yearmon(Date, format = "%b%Y"), frac = 0)) %>%
relocate(Year, .after = Date) %>%
relocate(MonthStartDate, .after = Year) %>%
separate(Runtime, into=c("Hour", "Minute"), sep = " ") %>%
relocate(Genre, .before = Hour) %>%
mutate(Minute = case_when(is.na(Minute) & str_detect(Hour, "min") ~ Hour, TRUE ~ Minute)) %>%
mutate(Hour = case_when(str_detect(Hour, "min") ~ "0h", TRUE ~ Hour)) %>%
filter(Hour != "TV-MA") %>%
mutate(Hour = as.numeric(str_replace_all(Hour,"h", ""))) %>%
mutate(Minute = as.numeric(str_replace_all(Minute,"min", ""))) %>%
mutate(Total_Minutes = (Hour * 60) + Minute) %>%
mutate(Total_Hours = round(Total_Minutes / 60, 0)) %>%
mutate(Month = month(Date)) %>%
mutate(WeekDay = weekdays(Date)) %>%
mutate(Type = str_to_title(Type))
# remove individual monthly sales dataframes (for cleanliness)
rm(list=ls(pattern=".csv"))
# Color scale for this dashboard
color_scale <- c("#E50914", "#141414")
# color_scale <- c("#FFC1E7", "#7CDAE3")
metis_color <- color_scale[1]
philip_color <- color_scale[2]
genre_split_df <- manipulated_df %>%
separate_rows(Genre, sep = ",") %>%
mutate(Genre = str_trim(Genre, side = "both"))
summaryTable <- genre_split_df %>%
group_by(Genre) %>%
summarise(`Watch Time (Minutes)` = sum(Total_Minutes))
summaryTable <- genre_split_df %>%
group_by(Genre) %>%
summarise(`Watch Time (Minutes)` = sum(Total_Minutes)) %>%
ungroup()
summaryTable
treemap <- summaryTable %>%
hchart(
"treemap",
hcaes(x = Genre, value = `Watch Time (Minutes)`, color = `Watch Time (Minutes)`)
)
treemap
summaryTable <- genre_split_df %>%
group_by(Genre) %>%
summarise(`Watch Time (Minutes)` = sum(Total_Minutes)) %>%
ungroup() %>%
arrange(desc(`Watch Time (Minutes)`))
summaryTable
treemap <- summaryTable %>%
hchart(
"treemap",
hcaes(x = Genre, value = `Watch Time (Minutes)`, color = `Watch Time (Minutes)`)
)
treemap
treemap <- summaryTable %>%
filter(str_detect(Type, if_else(input$v_Type == "All", "", input$v_Type))) %>%
filter(str_detect(Genre, if_else(input$v_Genre == "All", "", input$v_Genre))) %>%
filter(str_detect(Title, if_else(input$v_Title == "All", "", input$v_Title))) %>%
hchart(
"treemap",
hcaes(x = Genre, value = `Watch Time (Minutes)`, color = `Watch Time (Minutes)`)
)
summaryTable <- genre_split_df %>%
group_by(Genre) %>%
summarise(`Watch Time (Minutes)` = sum(Total_Minutes)) %>%
ungroup() %>%
arrange(desc(`Watch Time (Minutes)`))
treemap <- summaryTable %>%
hchart(
"treemap",
hcaes(x = Genre, value = `Watch Time (Minutes)`, color = `Watch Time (Minutes)`)
)
treemap
